===
FUNC_NAME: "mmap"
FUNC_INTERFACE_VAR: {
  addr (unsigned long),
  len (unsigned long),
  prot (unsigned long),
  flags (unsigned long),
  fd (unsigned long),
  off (unsigned long)
}
FUNC_CALLED: {
  offset_in_page(off),
  ksys_mmap_pgoff(addr, len, prot, flags, fd, off >> PAGE_SHIFT)
}
==
FUNC_NAME: "ioctl"
GLOBAL_VARS: {f}
FUNC_INTERFACE_VAR: {fd (unsigned int), cmd (unsigned int), arg (unsigned long)}
FUNC_CALLED: {security_file_ioctl(f.file, cmd, arg), do_vfs_ioctl(f.file, fd, cmd, arg), vfs_ioctl(f.file, cmd, arg)}
IMPORTANT_FUNC: {do_vfs_ioctl}
==
FUNC_NAME: "do_vfs_ioctl"
FUNC_ARGS: {filp (struct file *), fd (unsigned int), cmd (unsigned int), arg (unsigned long)}
FUNC_CALLED: {set_close_on_exec(fd, 1), set_close_on_exec(fd, 0), ioctl_fionbio(filp, argp),
              ioctl_fioasync(fd, filp, argp), ioctl_fsfreeze(filp), ioctl_fsthaw(filp),
              ioctl_fiemap(filp, argp), put_user(inode->i_sb->s_blocksize, (int __user *)argp),
              ioctl_file_clone(filp, arg, 0, 0, 0), ioctl_file_clone_range(filp, argp),
              ioctl_file_dedupe_range(filp, argp), vfs_ioctl(filp, cmd, arg),
              put_user(i_size_read(inode) - filp->f_pos, (int __user *)argp),
              ioctl_getflags(filp, argp), ioctl_setflags(filp, argp),
              ioctl_fsgetxattr(filp, argp), ioctl_fssetxattr(filp, argp), file_ioctl(filp, cmd, argp)}
IMPORTANT_FUNC: {set_close_on_exec, ioctl_fionbio, ioctl_fioasync, ioctl_fsfreeze, ioctl_fsthaw,
                 ioctl_fiemap, put_user, ioctl_file_clone, ioctl_file_clone_range, ioctl_file_dedupe_range,
                 vfs_ioctl, i_size_read, ioctl_getflags, ioctl_setflags, ioctl_fsgetxattr, ioctl_fssetxattr,
                 file_ioctl}
==
FUNC_NAME: "fcntl"
GLOBAL_VARS: {f}
FUNC_INTERFACE_VAR: {fd (unsigned int), cmd (unsigned int), arg (unsigned long)}
FUNC_CALLED: {fdget_raw(fd), check_fcntl_cmd(cmd), security_file_fcntl(f.file, cmd, arg), do_fcntl(fd, cmd, arg, f.file)}
IMPORTANT_FUNC: {check_fcntl_cmd, security_file_fcntl, do_fcntl}
==
FUNC_NAME: "open"
GLOBAL_VARS: {}
FUNC_INTERFACE_VAR: {filename (const char __user *), flags (int), mode (umode_t)}
FUNC_CALLED: {force_o_largefile(), do_sys_open(AT_FDCWD, filename, flags, mode)}
IMPORTANT_FUNC: {force_o_largefile, do_sys_open}
==
FUNC_NAME: "creat"
GLOBAL_VARS: {}
FUNC_INTERFACE_VAR: {pathname (const char __user *), mode (umode_t)}
FUNC_CALLED: {force_o_largefile(), do_sys_open(AT_FDCWD, pathname, flags, mode)}
IMPORTANT_FUNC: {force_o_largefile, do_sys_open}
==
FUNC_NAME: "close"
GLOBAL_VARS: {}
FUNC_INTERFACE_VAR: {fd (unsigned int)}
FUNC_CALLED: {close_fd(fd)}
IMPORTANT_FUNC: {close_fd}
==
FUNC_NAME: "read"
GLOBAL_VARS: {}
FUNC_INTERFACE_VAR: {fd (unsigned int), buf (char __user *), count (size_t)}
FUNC_CALLED: {ksys_read(fd, buf, count)}
IMPORTANT_FUNC: {ksys_read}
==
FUNC_NAME: "write"
GLOBAL_VARS: {}
FUNC_INTERFACE_VAR: {fd (unsigned int), buf (const char __user *), count (size_t)}
FUNC_CALLED: {ksys_write(fd, buf, count)}
IMPORTANT_FUNC: {ksys_write}
==
FUNC_NAME: "writev"
GLOBAL_VARS: {}
FUNC_INTERFACE_VAR: {fd (unsigned long), vec (const struct iovec __user *), vlen (unsigned long)}
FUNC_CALLED: {do_writev(fd, vec, vlen, 0)}
IMPORTANT_FUNC: {do_writev}
==
FUNC_NAME: "readv"
GLOBAL_VARS: {}
FUNC_INTERFACE_VAR: {fd (unsigned long), vec (const struct iovec __user *), vlen (unsigned long)}
FUNC_CALLED: {do_readv(fd, vec, vlen, 0)}
IMPORTANT_FUNC: {do_readv}
==
FUNC_NAME: "preadv"
GLOBAL_VARS: {}
FUNC_INTERFACE_VAR: {fd (unsigned long), vec (const struct iovec __user *), vlen (unsigned long), pos_l (unsigned long), pos_h (unsigned long)}
FUNC_CALLED: {pos_from_hilo(pos_h, pos_l), do_preadv(fd, vec, vlen, pos, 0)}
IMPORTANT_FUNC: {pos_from_hilo, do_preadv}
==
FUNC_NAME: "pwritev"
GLOBAL_VARS: {}
FUNC_INTERFACE_VAR: {fd (unsigned long), vec (const struct iovec __user *), vlen (unsigned long), pos_l (unsigned long), pos_h (unsigned long)}
FUNC_CALLED: {pos_from_hilo(pos_h, pos_l), do_pwritev(fd, vec, vlen, pos, 0)}
IMPORTANT_FUNC: {pos_from_hilo, do_pwritev}
==
FUNC_NAME: "dup"
GLOBAL_VARS: {file}
FUNC_INTERFACE_VAR: {fildes (unsigned int)}
FUNC_CALLED: {fget_raw(fildes), get_unused_fd_flags(0), fd_install(ret, file), fput(file)}
IMPORTANT_FUNC: {fget_raw, get_unused_fd_flags, fd_install, fput}
==
FUNC_NAME: "dup2"
GLOBAL_VARS: {files}
FUNC_INTERFACE_VAR: {oldfd (unsigned int), newfd (unsigned int)}
FUNC_CALLED: {files_lookup_fd_rcu(files, oldfd), ksys_dup3(oldfd, newfd, 0)}
IMPORTANT_FUNC: {files_lookup_fd_rcu, ksys_dup3}
==
FUNC_NAME: "flock"
GLOBAL_VARS: {f}
FUNC_INTERFACE_VAR: {fd (unsigned int), cmd (unsigned int)}
FUNC_CALLED: {fdget(fd), flock_make_lock(f.file, cmd, NULL), security_file_lock(f.file, lock->fl_type), f.file->f_op->flock(f.file, (can_sleep) ? F_SETLKW : F_SETLK, lock), locks_lock_file_wait(f.file, lock), locks_free_lock(lock), fdput(f)}
IMPORTANT_FUNC: {flock_make_lock, security_file_lock, f.file->f_op->flock, locks_lock_file_wait, locks_free_lock}
==
FUNC_NAME: "poll"
GLOBAL_VARS: {end_time, restart_block}
FUNC_INTERFACE_VAR: {ufds (struct pollfd __user *), nfds (unsigned int), timeout_msecs (int)}
FUNC_CALLED: {poll_select_set_timeout(to, timeout_msecs / MSEC_PER_SEC, NSEC_PER_MSEC * (timeout_msecs % MSEC_PER_SEC)), do_sys_poll(ufds, nfds, to), set_restart_fn(restart_block, do_restart_poll)}
IMPORTANT_FUNC: {poll_select_set_timeout, do_sys_poll, set_restart_fn}
==
FUNC_NAME: "truncate"
GLOBAL_VARS: {}
FUNC_INTERFACE_VAR: {path (const char __user *), length (long)}
FUNC_CALLED: {do_sys_truncate(path, length)}
IMPORTANT_FUNC: {do_sys_truncate}
==
FUNC_NAME: "ftruncate"
GLOBAL_VARS: {}
FUNC_INTERFACE_VAR: {fd (unsigned int), length (unsigned long)}
FUNC_CALLED: {do_sys_ftruncate(fd, length, 1)}
IMPORTANT_FUNC: {do_sys_ftruncate}
==
FUNC_NAME: "umask"
GLOBAL_VARS: {}
FUNC_INTERFACE_VAR: {mask (int)}
FUNC_CALLED: {xchg(&current->fs->umask, mask & S_IRWXUGO)}
IMPORTANT_FUNC: {xchg}
==
FUNC_NAME: "fsync"
GLOBAL_VARS: {}
FUNC_INTERFACE_VAR: {fd (unsigned int)}
FUNC_CALLED: {do_fsync(fd, 0)}
IMPORTANT_FUNC: {do_fsync}
===
